// Script de test pour v√©rifier les images du blog apr√®s correction
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

const supabase = createClient(supabaseUrl, supabaseAnonKey);

// Fonction d'optimisation corrig√©e
function optimizeImageUrl(imageUrl) {
  if (!imageUrl) return imageUrl;
  // Retourne l'URL originale sans modification
  return imageUrl;
}

async function testBlogPostsFixed() {
  console.log('üîÑ Test apr√®s correction de la fonction optimizeImageUrl...\n');

  try {
    const { data, error } = await supabase
      .from('blog_posts')
      .select('*')
      .eq('published', true)
      .order('published_at', { ascending: false })
      .limit(5); // Test avec les 5 derniers articles

    if (error) {
      console.error('‚ùå Erreur:', error);
      return;
    }

    console.log(`‚úÖ Test avec ${data.length} articles r√©cents:\n`);

    data.forEach((post, index) => {
      const originalUrl = post.image_url;
      const optimizedUrl = optimizeImageUrl(post.image_url);

      console.log(`${index + 1}. ${post.title}`);
      console.log(`   URL originale:  ${originalUrl || 'AUCUNE'}`);
      console.log(`   URL optimis√©e:  ${optimizedUrl || 'AUCUNE'}`);
      console.log(`   Status: ${originalUrl === optimizedUrl ? '‚úÖ INCHANG√âE (CORRECT)' : '‚ö†Ô∏è  MODIFI√âE'}`);
      console.log('');
    });

    console.log('üéâ Test termin√© - Toutes les URLs sont maintenant pr√©serv√©es !');

  } catch (err) {
    console.error('‚ùå Exception:', err);
  }
}

testBlogPostsFixed();